name: AxoSyslog Docker image builder

permissions: write-all

on:
  workflow_call:
    inputs:
      type:
        required: true
        type: string  # stable / snapshot
      platforms:
        required: false
        type: string
        default: linux/amd64
      snapshot-tarball-artifact:
        required: false
        type: string
      snapshot-version:
        required: false
        type: string
      snapshot-tags: # comma-separated
        required: false
        type: string

env:
  DEBUG_PLATFORM: linux/amd64

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      platform-matrix: ${{ steps.platforms.outputs.platform-matrix }}
      image-name: ${{ steps.registry.outputs.image-name }}
    steps:
      - id: platforms
        name: platform
        env:
          PLATFORMS: ${{ inputs.platforms }}
        run: |
          PLATFORM_MATRIX="$(echo "$PLATFORMS" | jq 'split(",")' -Rc)"
          echo "platform-matrix=$PLATFORM_MATRIX" >> $GITHUB_OUTPUT
      - id: registry
        name: registry
        run: |
          IMAGE_NAME="ghcr.io/${{ github.repository_owner }}/axosyslog"
          IMAGE_NAME="$(echo "$IMAGE_NAME" | tr '[:upper:]' '[:lower:]')"
          echo "image-name=$IMAGE_NAME" >> $GITHUB_OUTPUT

  merge-and-push:
    runs-on: ubuntu-latest
    needs: [prepare]
    steps:
      - name: Extract metadata (AxoSyslog version) for Docker
        id: docker-metadata-tags
        uses: docker/metadata-action@v5
        with:
          images: ${{ needs.prepare.outputs.image-name }}
          tags: type=match,pattern=axosyslog-([0-9].*),group=1
          sep-tags: ','

      - name: Compose Docker image tags
        id: tags
        env:
          TYPE: ${{ inputs.type }}
          SNAPSHOT_TAGS: ${{ inputs.snapshot-tags }}
          IMAGE_NAME: ${{ needs.prepare.outputs.image-name }}
        run: |
          if [[ "$TYPE" = "stable" ]]; then
            TAGS='${{ steps.docker-metadata-tags.outputs.tags }}'
          elif [[ "$TYPE" = "snapshot" ]]; then
            TAGS="$(echo "$SNAPSHOT_TAGS" | sed "s|[^,]*|$IMAGE_NAME:&|g")"
          else
            echo "Unexpected input: type=$TYPE"
            false
          fi

          echo "TAGS=$TAGS" >> $GITHUB_OUTPUT
          echo "DEBUG_TAGS=${TAGS//,/-dbg,}-dbg" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT